version: '3.1'

networks:
    net:

volumes:
    mongo_data: {}

services:
    database:
        image: mongo
        ports:
            - '27017:27017'
        environment:
            MONGO_INITDB_DATABASE: microtrello
            MONGO_INITDB_ROOT_USERNAME: rootuser
            MONGO_INITDB_ROOT_PASSWORD: rootpass
        networks:
            - net
        volumes:
            - ./mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
            - mongo_data:/data/db

    frontend:
        image: microtrello-frontend:latest
        ports:
            - '80:80'
        depends_on:
            - backend
            - auth-service
        networks:
            - net
        deploy:
            replicas: 1
            restart_policy:
                condition: any

    backend:
        image: microtrello-backend:latest
        depends_on:
            - database
        environment:
            PORT: 8080
            MONGO_HOST: database
            MONGO_PORT: 27017
            MONGO_DB: microtrello
            MONGO_USER: robot
            MONGO_PASS: qwerty123zxc
        networks:
            - net
        deploy:
            replicas: 1
            restart_policy:
                condition: any

    auth-service:
        image: microtrello-auth-service:latest
        depends_on:
            - database
        environment:
            PORT: 8080
            MONGO_HOST: database
            MONGO_PORT: 27017
            MONGO_DB: microtrello
            MONGO_USER: robot
            MONGO_PASS: qwerty123zxc
        networks:
            - net
        deploy:
            replicas: 1
            restart_policy:
                condition: any

    grafana:
        image: grafana/grafana
        depends_on:
            - prometheus
        ports:
            - 3000:3000
        volumes:
            - ./grafana/:/etc/grafana/provisioning/
        environment:
            GF_SECURITY_ADMIN_PASSWORD: "qwerty123"
            GF_USERS_ALLOW_SIGN_UP: "false"
            GF_AUTH_ANONYMOUS_ENABLED: "true"
        networks:
            - net
        restart: always

    prometheus:
        image: prom/prometheus
        volumes:
            - ./prometheus/:/etc/prometheus/
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
        ports:
            - 3001:9090
        networks:
            - net
        restart: always

    cadvisor:
        image: google/cadvisor:latest
        ports:
            - 3002:8080
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
        networks: 
            - net
        depends_on:
            - frontend
            - backend
            - auth-service
            - database
